apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        args:
        - /etc/redis/redis.conf
        env:
        {{- if .Values.auth.enabled }}
        - name: REDIS_PASSWORD
          value: {{ .Values.auth.password }}
        {{- end }}
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
          readOnly: true
        {{- if .Values.persistence.enabled }}
        - name: redis-data
          mountPath: /data
        {{- end }}
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      {{- if .Values.persistence.enabled }}
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
      {{- end }}